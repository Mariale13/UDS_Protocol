.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH C++FILT 1 "binutils-2.11.90" "14/Sep/101" "GNU"
.UC
.if n .hy 0
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
c++filt \- Demangle \*(C+ and Java symbols.
.SH "SYNOPSIS"
c++filt [\fB\-_\fR|\fB--strip-underscores\fR]
        [\fB\-j\fR|\fB--java\fR]
        [\fB\-n\fR|\fB--no-strip-underscores\fR]
        [\fB\-s\fR \fIformat\fR|\fB--format=\fR\fIformat\fR]
        [\fB--help\fR]  [\fB--version\fR]  [\fIsymbol\fR...]
.SH "DESCRIPTION"
The \*(C+ and Java languages provides function overloading, which means
that you can write many functions with the same name (providing each
takes parameters of different types).  All \*(C+ and Java function names
are encoded into a low-level assembly label (this process is known as
\fImangling\fR). The \fBc++filt\fR
[1]
program does the inverse mapping: it decodes (\fIdemangles\fR) low-level
names into user-level names so that the linker can keep these overloaded
functions from clashing.
.PP
Every alphanumeric word (consisting of letters, digits, underscores,
dollars, or periods) seen in the input is a potential label.  If the
label decodes into a \*(C+ name, the \*(C+ name replaces the low-level
name in the output.
.PP
You can use \fBc++filt\fR to decipher individual symbols:
.PP
.Vb 2
\&        
\&        c++filt I<symbol>
.Ve
If no \fIsymbol\fR arguments are given, \fBc++filt\fR reads symbol
names from the standard input and writes the demangled names to the
standard output.  All results are printed on the standard output.
.SH "OPTIONS"
.Ip "\fB\-_\fR" 4
.Ip "\fB--strip-underscores\fR" 4
On some systems, both the C and \*(C+ compilers put an underscore in front
of every name.  For example, the C name \f(CWfoo\fR gets the low-level
name \f(CW_foo\fR.  This option removes the initial underscore.  Whether
\fBc++filt\fR removes the underscore by default is target dependent.
.Ip "\fB\-j\fR" 4
.Ip "\fB--java\fR" 4
Prints demangled names using Java syntax.  The default is to use \*(C+
syntax.
.Ip "\fB\-n\fR" 4
.Ip "\fB--no-strip-underscores\fR" 4
Do not remove the initial underscore.
.Ip "\fB\-s\fR \fIformat\fR" 4
.Ip "\fB--format=\fR\fIformat\fR" 4
\s-1GNU\s0 \fBnm\fR can decode three different methods of mangling, used by
different \*(C+ compilers.  The argument to this option selects which
method it uses:
.Ip "\f(CWgnu\fR" 8
the one used by the \s-1GNU\s0 compiler (the default method)
.Ip "\f(CWlucid\fR" 8
the one used by the Lucid compiler
.Ip "\f(CWarm\fR" 8
the one specified by the \*(C+ Annotated Reference Manual
.Ip "\f(CWhp\fR" 8
the one used by the \s-1HP\s0 compiler
.Ip "\f(CWedg\fR" 8
the one used by the \s-1EDG\s0 compiler
.Ip "\f(CWgnu-new-abi\fR" 8
the one used by the \s-1GNU\s0 compiler with the new \s-1ABI\s0.
.Ip "\fB--help\fR" 4
Print a summary of the options to \fBc++filt\fR and exit.
.Ip "\fB--version\fR" 4
Print the version number of \fBc++filt\fR and exit.
.SH "FOOTNOTES"
.Ip "1." 4
\s-1MS\s0\-\s-1DOS\s0 does not allow \f(CW+\fR characters in file names, so on
\s-1MS\s0\-\s-1DOS\s0 this program is named \fBc++filt\fR.
.SH "SEE ALSO"
the Info entries for \fIbinutils\fR.
.SH "COPYRIGHT"
Copyright (c) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000, 2001 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled \*(L"GNU Free Documentation License\*(R".

.rn }` ''
.IX Title "C++FILT 1"
.IX Name "c++filt - Demangle C++ and Java symbols."

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\fB\-_\fR"

.IX Item "\fB--strip-underscores\fR"

.IX Item "\fB\-j\fR"

.IX Item "\fB--java\fR"

.IX Item "\fB\-n\fR"

.IX Item "\fB--no-strip-underscores\fR"

.IX Item "\fB\-s\fR \fIformat\fR"

.IX Item "\fB--format=\fR\fIformat\fR"

.IX Item "\f(CWgnu\fR"

.IX Item "\f(CWlucid\fR"

.IX Item "\f(CWarm\fR"

.IX Item "\f(CWhp\fR"

.IX Item "\f(CWedg\fR"

.IX Item "\f(CWgnu-new-abi\fR"

.IX Item "\fB--help\fR"

.IX Item "\fB--version\fR"

.IX Header "FOOTNOTES"

.IX Item "1."

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

