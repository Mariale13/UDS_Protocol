.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH NLMCONV 1 "binutils-2.11.90" "14/Sep/101" "GNU"
.UC
.if n .hy 0
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
nlmconv \- converts object code into an NLM.
.SH "SYNOPSIS"
nlmconv [\fB\-I\fR \fIbfdname\fR|\fB--input-target=\fR\fIbfdname\fR]
        [\fB\-O\fR \fIbfdname\fR|\fB--output-target=\fR\fIbfdname\fR]
        [\fB\-T\fR \fIheaderfile\fR|\fB--header-file=\fR\fIheaderfile\fR]
        [\fB\-d\fR|\fB--debug\fR] [\fB\-l\fR \fIlinker\fR|\fB--linker=\fR\fIlinker\fR]
        [\fB\-h\fR|\fB--help\fR] [\fB\-V\fR|\fB--version\fR]
        \fIinfile\fR \fIoutfile\fR
.SH "DESCRIPTION"
\fBnlmconv\fR converts the relocatable \fBi386\fR object file
\fIinfile\fR into the NetWare Loadable Module \fIoutfile\fR, optionally
reading \fIheaderfile\fR for NLM header information.  For instructions
on writing the NLM command file language used in header files, see the
\fBlinkers\fR section, \fBNLMLINK\fR in particular, of the \fINLM
Development and Tools Overview\fR, which is part of the NLM Software
Developer's Kit (``NLM SDK''), available from Novell, Inc.
\fBnlmconv\fR uses the GNU Binary File Descriptor library to read
\fIinfile\fR;
.PP
\fBnlmconv\fR can perform a link step.  In other words, you can list
more than one object file for input if you list them in the definitions
file (rather than simply specifying one input file on the command line).
In this case, \fBnlmconv\fR calls the linker for you.
.SH "OPTIONS"
.Ip "\fB\-I\fR \fIbfdname\fR" 4
.Ip "\fB--input-target=\fR\fIbfdname\fR" 4
Object format of the input file.  \fBnlmconv\fR can usually determine
the format of a given file (so no default is necessary).
.Ip "\fB\-O\fR \fIbfdname\fR" 4
.Ip "\fB--output-target=\fR\fIbfdname\fR" 4
Object format of the output file.  \fBnlmconv\fR infers the output
format based on the input format, e.g. for a \fBi386\fR input file the
output format is \fBnlm32-i386\fR.
.Ip "\fB\-T\fR \fIheaderfile\fR" 4
.Ip "\fB--header-file=\fR\fIheaderfile\fR" 4
Reads \fIheaderfile\fR for \s-1NLM\s0 header information.  For instructions on
writing the \s-1NLM\s0 command file language used in header files, see see the
\fBlinkers\fR section, of the \fI\s-1NLM\s0 Development and Tools
Overview\fR, which is part of the \s-1NLM\s0 Software Developer's Kit, available
from Novell, Inc.
.Ip "\fB\-d\fR" 4
.Ip "\fB--debug\fR" 4
Displays (on standard error) the linker command line used by \fBnlmconv\fR.
.Ip "\fB\-l\fR \fIlinker\fR" 4
.Ip "\fB--linker=\fR\fIlinker\fR" 4
Use \fIlinker\fR for any linking.  \fIlinker\fR can be an absolute or a
relative pathname.
.Ip "\fB\-h\fR" 4
.Ip "\fB--help\fR" 4
Prints a usage summary.
.Ip "\fB\-V\fR" 4
.Ip "\fB--version\fR" 4
Prints the version number for \fBnlmconv\fR.
.SH "SEE ALSO"
the Info entries for \fIbinutils\fR.
.SH "COPYRIGHT"
Copyright (c) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000, 2001 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled \*(L"GNU Free Documentation License\*(R".

.rn }` ''
.IX Title "NLMCONV 1"
.IX Name "nlmconv - converts object code into an NLM."

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\fB\-I\fR \fIbfdname\fR"

.IX Item "\fB--input-target=\fR\fIbfdname\fR"

.IX Item "\fB\-O\fR \fIbfdname\fR"

.IX Item "\fB--output-target=\fR\fIbfdname\fR"

.IX Item "\fB\-T\fR \fIheaderfile\fR"

.IX Item "\fB--header-file=\fR\fIheaderfile\fR"

.IX Item "\fB\-d\fR"

.IX Item "\fB--debug\fR"

.IX Item "\fB\-l\fR \fIlinker\fR"

.IX Item "\fB--linker=\fR\fIlinker\fR"

.IX Item "\fB\-h\fR"

.IX Item "\fB--help\fR"

.IX Item "\fB\-V\fR"

.IX Item "\fB--version\fR"

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

